$icon-font-path: "../bower_components/bootstrap-sass-official/assets/fonts/bootstrap/";
// bower:scss
@import "bootstrap-sass-official/assets/stylesheets/_bootstrap.scss";
@import "font-awesome/scss/font-awesome.scss";
// endbower

/* Colours */
$yellow:     #F1EFA5;
$brown:      #554236;
$green:      #60B99A;
$offwhite:   #FEFEFE;
$grey:       #888888;
$light-grey: #F3F3F3;

/* Structure */
$navbar-height: 50px;
$cal-width: 67%;
$cal-scroll-width: 67.5%;

body {
  background: $yellow;
  background: -moz-linear-gradient(left, $yellow 0%, $yellow $cal-scroll-width, $green $cal-scroll-width);
  background: -webkit-gradient(linear, left top, right top, color-stop(0%,$yellow), color-stop($cal-scroll-width,$yellow), color-stop($cal-scroll-width,$green));
  background: -webkit-linear-gradient(left, $yellow 0%,$yellow $cal-scroll-width,$green $cal-scroll-width);
  background: -o-linear-gradient(left, $yellow 0%,$yellow $cal-scroll-width,$green $cal-scroll-width);
  background: -ms-linear-gradient(left, $yellow 0%,$yellow $cal-scroll-width,$green $cal-scroll-width);
  background: linear-gradient(to right, $yellow 0%,$yellow $cal-scroll-width,$green $cal-scroll-width);
  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='$yellow', endColorstr='$green',GradientType=1 );
}

.navbar {
  border-radius: 0;
  margin-bottom: 0;
  background: $brown;
  border: none;
  min-height: $navbar-height;
}

.navbar-header {
  text-align: center;
}

.navbar-header .navbar-brand {
  color: $offwhite;
}

.wrapper {
  width: 100%;
  height: 100%;
  position: relative;
  display: table;
}

.fixed-wrapper, .fixed-content {
  width: $cal-width;
  top: $navbar-height;
  left: 15px;
  bottom: 0;
  padding-right: 15px;
}

.fixed-wrapper {
  position: absolute;
}

.fixed-content {
  position: fixed;
  overflow-y: scroll;
  overflow-x: hidden;
}

.sidebar-wrapper {
  height: 100%;
  width: 100% - $cal-width;
  display: table-cell;
  vertical-align: top;
  margin-left: $cal-width;
  padding-left: 15px;
  padding-top: $navbar-height;
}

.sidebar {
  // height: 100%;
}

/* Main content */
.calendar {
  padding-top: 15px;
  padding-bottom: 15px;
}

.login-form {
  padding-top: calc(#{$navbar-height} + 15px);
  width: 500px;
  margin: 0 auto;
}

.tile {
  width: 33.33%;
  height: 300px;
  float: left;
  padding: 10px;
}

.tile-inner {
  height: 100%;
  background: $offwhite;
}

.tile-header {
  border-bottom: 5px solid $yellow;
  padding: .5em 1em .7em 1em;
  font-size: 1.5em;
  color: $brown;
}

.tile-body {
  height: 78%;
  overflow-y: auto;
}

.tile-header .add-task {
  float: right;
}

.tile-header > .add-task > i {
  vertical-align: middle;
}

.tile .today {
  background-color: $light-grey;
}

.tile-item-name {
  display: inline-block;
  width: 60%;
}

.tile-item-time {
  display: inline-block;
  margin-right: 1px;
  width: 20%;
}

.invalid {
  border-color: #a94442;
  box-shadow: inset 0 1px 1px rgba(0,0,0,.075);
}

.invalid:focus {
  border-color: #a94442;
  box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075), 0 0 8px rgba(255, 0, 0, 0.6);
}

.btn-default, .btn-danger {
  border-radius: 0;
}

.btn--recur {
  display: inline-block;

  i {
    font-size: 0.8em;
    vertical-align: text-top;
  }
}

.recur-icon {
  margin-left: 5px;
}

.popover {
  box-shadow: none;
  border-radius: 0;

  .popover-content {
    width: 400px;
    padding: 15px;
  }

  .popover-title {
    background-color: $light-grey;
    color: $brown;
    border-radius: 0;
  }
}

.form--popover .form-group {
  margin-left: 0;

  .form-control {
    width: inherit;
  }
}

.date {
  font-size: 0.6em;
  color: $grey;
}

/* Sidebar */
.sidebar-wrapper {
  background-color: $green;
}

.sidebar {
  background: $green;
}

.sidebar .tile {
  width: 100%;
  height: auto;
}

.sidebar .tile-header {
  background: $green;
  color: white;
  border-bottom: none;
  padding: .5em .5em .5em 0;
}

.sidebar .tile-inner {
  min-height: 150px;
}

/* Drag and drop */

/**
 * For the correct positioning of the placeholder element, the dnd-list and
 * it's children must have position: relative
 */
ul[dnd-list],
ul[dnd-list] > li {
  position: relative;
}

/**
 * The dnd-list should always have a min-height,
 * otherwise you can't drop to it once it's empty
 */
ul[dnd-list] {
  min-height: 42px;
  padding-left: 0px;
}

/**
 * The dndDraggingSource class will be applied to
 * the source element of a drag operation. It makes
 * sense to hide it to give the user the feeling
 * that he's actually moving it.
 */
ul[dnd-list] .dndDraggingSource {
  display: none;
}

/**
 * An element with .dndPlaceholder class will be
 * added to the dnd-list while the user is dragging
 * over it.
 */
ul[dnd-list] .dndPlaceholder {
  display: block;
  background-color: #ddd;
  min-height: 42px;
}

/**
 * The dnd-lists's child elements currently MUST have
 * position: relative. Otherwise we can not determine
 * whether the mouse pointer is in the upper or lower
 * half of the element we are dragging over. In other
 * browsers we can use event.offsetY for this.
 */
ul[dnd-list] li {
  background-color: #fff;
  border-radius: 0;
  display: block;
  padding-top: 10px;
  height: 40px;

  /* Disable text selection if item is not draggable */
  -webkit-touch-callout: none;
  -webkit-user-select: none;
  -khtml-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}

ul[dnd-list] input {
  border-radius: 0;

}

/**
 * Handle positioning
 */
.handle {
  width: 3em;
  padding: 5px;
  text-align: center;
  cursor: move;
  float: left;
}

.name {
  width: calc(100% - 4em);
  float: left;
}
